// <auto-generated />
using CarsAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarsAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231125094802_AddLocalUser")]
    partial class AddLocalUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarsAPI.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BodyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Condition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EngineType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("FuelEfficiency")
                        .HasColumnType("float");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Mileage")
                        .HasColumnType("float");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransmissionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BodyType = "Sedan",
                            Color = "Silver",
                            Condition = "Used",
                            EngineType = "Gasoline",
                            FuelEfficiency = 28.5,
                            ImageUrl = "https://example.com/toyota_camry_image.jpg",
                            Make = "Toyota",
                            Mileage = 25000.0,
                            Model = "Camry",
                            Price = 20000m,
                            TransmissionType = "Automatic",
                            VIN = "1HGCM82633A004352",
                            Year = 2020
                        },
                        new
                        {
                            Id = 2,
                            BodyType = "SUV",
                            Color = "Blue",
                            Condition = "Used",
                            EngineType = "Gasoline",
                            FuelEfficiency = 30.199999999999999,
                            ImageUrl = "https://example.com/honda_crv_image.jpg",
                            Make = "Honda",
                            Mileage = 30000.0,
                            Model = "CR-V",
                            Price = 23000m,
                            TransmissionType = "CVT",
                            VIN = "5J6RW1H58HL000568",
                            Year = 2018
                        },
                        new
                        {
                            Id = 3,
                            BodyType = "Coupe",
                            Color = "Red",
                            Condition = "New",
                            EngineType = "Gasoline",
                            FuelEfficiency = 25.0,
                            ImageUrl = "https://example.com/ford_mustang_image.jpg",
                            Make = "Ford",
                            Mileage = 10000.0,
                            Model = "Mustang",
                            Price = 35000m,
                            TransmissionType = "Manual",
                            VIN = "1FA6P8TH6M5107921",
                            Year = 2022
                        },
                        new
                        {
                            Id = 4,
                            BodyType = "SUV",
                            Color = "Black",
                            Condition = "Used",
                            EngineType = "Gasoline",
                            FuelEfficiency = 18.600000000000001,
                            ImageUrl = "https://example.com/chevrolet_tahoe_image.jpg",
                            Make = "Chevrolet",
                            Mileage = 15000.0,
                            Model = "Tahoe",
                            Price = 45000m,
                            TransmissionType = "Automatic",
                            VIN = "1GNSKCKC3MR379084",
                            Year = 2021
                        },
                        new
                        {
                            Id = 5,
                            BodyType = "SUV",
                            Color = "White",
                            Condition = "Used",
                            EngineType = "Gasoline",
                            FuelEfficiency = 24.5,
                            ImageUrl = "https://example.com/bmw_x5_image.jpg",
                            Make = "BMW",
                            Mileage = 20000.0,
                            Model = "X5",
                            Price = 50000m,
                            TransmissionType = "Automatic",
                            VIN = "5UXCR6C56KLL31682",
                            Year = 2019
                        });
                });

            modelBuilder.Entity("CarsAPI.Models.CarDetails", b =>
                {
                    b.Property<int>("CarDetailsId")
                        .HasColumnType("int");

                    b.Property<string>("AdditionalFeature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("SpecialDetails")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CarDetailsId");

                    b.HasIndex("CarId");

                    b.ToTable("CarDetails");
                });

            modelBuilder.Entity("CarsAPI.Models.LocalUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LocalUsers");
                });

            modelBuilder.Entity("CarsAPI.Models.CarDetails", b =>
                {
                    b.HasOne("CarsAPI.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });
#pragma warning restore 612, 618
        }
    }
}
